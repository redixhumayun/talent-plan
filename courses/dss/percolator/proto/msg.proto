// Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data.
// You can define how you want your data to be structured.
// Details can be found in https://developers.google.com/protocol-buffers/docs/proto3.

// Once you have defined the message, the `build.rs` will generate the corresponding data structure in `OUT_DIR`.
// You can use the structure by importing the `msg` module.
// Example:
// use crate::msg::CommitRequest;

syntax = "proto3";

package msg;

message TimestampRequest {}

message TimestampResponse {
    uint64 timestamp = 1;
}

message GetRequest {}

message GetResponse {}

message KVPair {
    bytes key = 1;
    bytes value = 2;
}

message PrewriteRequest {
    uint64 timestamp = 1;
    repeated KVPair kv_pairs = 2;
}

message PrewriteResponse {
    bool res = 1;
}

message CommitRequest {
    bool is_primary = 1;
}

message CommitResponse {}
